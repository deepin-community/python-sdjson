Source: python-sdjson
Section: python
Priority: optional
Maintainer: Debian Python Team <team+python@tracker.debian.org>
Uploaders: Josenilson Ferreira da Silva <nilsonfsilva@hotmail.com>
Rules-Requires-Root: no
Build-Depends: debhelper-compat (= 13),
               dh-sequence-python3,
               pybuild-plugin-pyproject,
               python3-whey,
               python3-all,
               python3-coincidence,
               python3-coverage,
               python3-domdf-python-tools,
               python3-importlib-metadata,
               python3-iniconfig,
               python3-pytest,
               python3-pytest-cov,
               python3-pytest-regressions,
               python3-pytest-rerunfailures,
               python3-pytest-timeout,
               python3-setuptools,
               python3-typing-extensions,
               tzdata
Standards-Version: 4.6.2
Homepage: https://github.com/domdfcoding/singledispatch-json
Vcs-Browser: https://salsa.debian.org/python-team/packages/python-sdjson
Vcs-Git: https://salsa.debian.org/python-team/packages/python-sdjson.git
Testsuite: autopkgtest-pkg-pybuild

Package: python3-sdjson
Architecture: all
Depends: python3-domdf-python-tools,
         ${misc:Depends},
         ${python3:Depends}
Description: single-dispatch JSON encoder for Python
 Module uses functools.singledispatch to support custom encoders for Python
 built-in classes and user-created classes.
 .
 The goal is to simplify the process of serializing objects into JSON by
 allowing developers to register custom encoders for their classes,
 allowing you to define instances to be converted into JSON format.
 .
 After coding, you can use sdjson.dumps(class_instance) to serialize an
 instance of the class into a JSON string. This makes the process of saving
 objects in JSON easier.
 .
 In addition to serialization to a string, the project provides
 the ability to serialize objects directly to JSON files using sdjson.dump
 (class_instance, fp).
 .
 The sdjson project also supports several features of the json module,
 including load, loads, JSONDecoder, JSONDecodeError and JSONEncoder.
 This allows you to use sdjson as a drop-in replacement for the json
 module.
 .
 This package installs the library for Python 3.
